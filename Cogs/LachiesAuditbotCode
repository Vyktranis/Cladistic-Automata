
import discord
from discord.ext import commands

AUDIT_CHANNEL = 867601732367286284

client = commands.Bot(
    command_prefix=".",
    case_insensitive=True,
    intents=discord.Intents.all()
)


@client.event #this checks for when messages are deleted
async def on_message_delete(message):
    audit = client.get_channel(AUDIT_CHANNEL)
    deleted_message_id = message.id
    author = message.author
    pfp = author.avatar_url

    if message.author.bot:
        pass
    else:
        embed=discord.Embed(title=f"Message deleted in #{message.channel}", description=message.content, color=0xff0000)
        embed.set_author(name=f"{message.author.name}#{message.author.discriminator}", icon_url=pfp)
        embed.set_footer(text=f"ID: {message.author.id}")
        await audit.send(embed=embed)


@client.event #this checks for when messages are edited
async def on_message_edit(old, new):
    audit = client.get_channel(AUDIT_CHANNEL)
    author = old.author
    pfp = author.avatar_url

    if old.author.bot:
        pass
    else:
        embed=discord.Embed(title=f"Message edited in #{old.channel}", description=f"**Before: **{old.content}\n**After: **{new.content}", color=0xffbb00)
        embed.set_author(name=f"{old.author.name}#{old.author.discriminator}", icon_url=pfp)
        embed.set_footer(text=f"ID: {new.id}")
        await audit.send(embed=embed)


@client.event
async def on_member_update(old,new):
    audit = client.get_channel(AUDIT_CHANNEL)
    pfp = new.avatar_url

    if old.display_name != new.display_name:
        embed=discord.Embed(title="Nickname Changed", description=f"**Before:** {old.display_name}\n**After:** {new.display_name}", color=0x1100ff)
        embed.set_author(name=f"{old.name}#{old.discriminator}", icon_url=pfp)
        embed.set_footer(text=f"ID: {new.id}")
        await audit.send(embed=embed)

    if old.name != new.name:
        embed=discord.Embed(title="Name Changed", description=f"**Before:** {old.name}\n**After:** {new.name}", color=0x1100ff)
        embed.set_author(name=f"{new.name}#{new.discriminator}", icon_url=pfp)
        embed.set_footer(text=f"ID: {new.id}")
        await audit.send(embed=embed)

    if old.discriminator != new.discriminator:
        embed=discord.Embed(title="Discriminator Changed", description=f"**Before:** #{old.discriminator}\n**After:** #{new.discriminator}", color=0x1100ff)
        embed.set_author(name=f"{new.name}#{new.discriminator}", icon_url=pfp)
        embed.set_footer(text=f"ID: {new.id}")
        await audit.send(embed=embed)

    if len(old.roles) < len(new.roles):
        new_role = next(role for role in new.roles if role not in old.roles)
        embed=discord.Embed(title="Role Added", description=new_role, color=0x1100ff)
        embed.set_author(name=f"{new.name}#{new.discriminator}", icon_url=pfp)
        embed.set_footer(text=f"ID: {new.id}")
        await audit.send(embed=embed)

    if len(old.roles) > len(new.roles):
        new_role = next(role for role in old.roles if role not in new.roles)
        embed=discord.Embed(title="Role Removed", description=new_role, color=0x1100ff)
        embed.set_author(name=f"{new.name}#{new.discriminator}", icon_url=pfp)
        embed.set_footer(text=f"ID: {new.id}")
        await audit.send(embed=embed)


client.run('BOT TOKEN')
